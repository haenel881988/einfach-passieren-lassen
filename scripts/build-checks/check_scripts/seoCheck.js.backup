// check_scripts/seoCheck.js
// Ausgelagertes SEO-Check-Skript für Build-Checks
// Erstellt: 2025-07-02
// Führt SEO-Prüfungen aus und schreibt Logfile in logfiles/

const fs = require('fs');
const path = require('path');
const { validateGlobalSEO } = require('../../../build-process/modules/seoCheck');

function runSeoCheck() {
    const logName = `seoCheck_${new Date().toISOString().replace(/[:.]/g, '-').split('T').join('_').replace(/Z$/, '')}.log`;
    const logPath = path.join(__dirname, '../logfiles', logName);
    const htmlFiles = findHtmlFiles();
    const options = {
        sitemapPath: 'sitemap.xml',
        robotsPath: 'robots.txt',
        wwwFormat: true,
        maxLastmodAgeDays: 30,
        htmlFiles: htmlFiles
    };
    const results = validateGlobalSEO(options);
    const log = [];
    log.push(`# SEO-Check Report (${new Date().toLocaleString('de-DE')})`);
    log.push(`Fehler: ${results.errors.length}`);
    log.push(`Warnungen: ${results.warnings.length}`);
    log.push('---');
    if (results.errors.length > 0) {
        log.push('## Fehler:');
        results.errors.forEach(e => log.push(`- ${e.message}`));
    }
    if (results.warnings.length > 0) {
        log.push('## Warnungen:');
        results.warnings.forEach(w => log.push(`- ${w.message}`));
    }
    if (results.info.length > 0) {
        log.push('## Hinweise:');
        results.info.forEach(i => log.push(`- ${i.message}`));
    }
    fs.writeFileSync(logPath, log.join('\n'), 'utf8');
    console.log(`SEO-Check abgeschlossen. Logfile: ${logPath}`);
    if (results.errors.length > 0) process.exit(2);
}

function findHtmlFiles(rootDir = '.', excludeDirs = ['node_modules', '.git', 'dist', 'build', '.vscode']) {
    const htmlFiles = [];
    function scanDir(dir) {
        if (!fs.existsSync(dir)) return;
        const entries = fs.readdirSync(dir, { withFileTypes: true });
        for (const entry of entries) {
            const fullPath = path.join(dir, entry.name);
            if (entry.isDirectory()) {
                if (!excludeDirs.includes(entry.name)) scanDir(fullPath);
            } else if (entry.isFile() && entry.name.endsWith('.html')) {
                htmlFiles.push(fullPath);
            }
        }
    }
    scanDir(rootDir);
    return htmlFiles;
}

if (require.main === module) {
    runSeoCheck();
}
